
/*
Toggle Deployment Swapping
In vanilla, units that are forced deployed can't change their starting position. This assembly allows you to toggle that behavior on a per unit, per chapter basis. During preparations, the first applicable entry in the forced deployment list will be used, so for any unit that's forced deployed for the entire game, exceptions for specific chapters should come earlier in the list before their "default ruling".

There's also an additional condition you can add; you can "assign" units to different groups of units that are allowed to swap with each other, but not other groups. Look at Example.event to look at setting this up.
*/

#include EAstdlib.event
#include "Extensions/Hack Installation.txt"

#define LockedPosition 0
#define UnlockedPosition 1
#define ForcedDeployment(char,lockedPosition,mode,chapter) "BYTE char lockedPosition mode chapter"
#define EndForcedDeploymentList "SHORT 0xFFFF 0"

#define DeploymentGroupChapterEntry(chapterId,pointingToGroupsPointer) "BYTE chapterId 0 0 0; POIN pointingToGroupsPointer"
#define EndDeploymentGroupChapterList "WORD 0 0"

#define AllModes 0xFF

ForcedDeploymentList: //Vanilla list at 0x9ED64C
//everything in this list is vanilla except for the Seth addition
ForcedDeployment(Eirika,LockedPosition,1,0xFF)
ForcedDeployment(Eirika,LockedPosition,2,0xFF)
ForcedDeployment(Ephraim,LockedPosition,3,0xFF)
ForcedDeployment(Artur,LockedPosition,AllModes,Ch4)
ForcedDeployment(Natasha,LockedPosition,AllModes,Ch5)
ForcedDeployment(Tana,LockedPosition,AllModes,Ch9Eirika)
ForcedDeployment(Saleh,LockedPosition,AllModes,Ch12Eirika)
ForcedDeployment(Ephraim,LockedPosition,2,FinalCh1Eirika)
ForcedDeployment(Eirika,LockedPosition,3,FinalCh1Ephraim)
ForcedDeployment(Seth,UnlockedPosition,AllModes,0xFF)
EndForcedDeploymentList

DeploymentGroupChapterList:
EndDeploymentGroupChapterList



//-------------------------------------------
//WIZARD CHECKPOINT
//Do not touch anything below unless you know what you're doing
//-------------------------------------------


//deployment routine to check if unit is forced (not unlocked/locked position) is at 0x84800

PUSH

ORG 0x1D538
SHORT 0x1C19 //mov r1, r3
BL(0x3374C)
SHORT 0x0600 0x2800 //lsl r0, #0x18; cmp r0, #0
SHORT 0xD105 0x2004 //bne (0x0801D550); mov r0, #4
SHORT 0xE02B //b (0x0801D5A0)
PROTECT 0x1D538 CURRENTOFFSET-1

ORG 0x332F0
SHORT 0x466D 0x3501 //mov r5, r13; add r5, #1
SHORT 0x7820 0x2800 //ldrb r0, [r4]; cmp r0, #0
SHORT 0xD01C //beq (0x08033334)
BL(0x9541C)
SHORT 0x2800 //cmp r0, #0
SHORT 0xD014 0xE000 //beq (0x0803332C); b (0x08033306)
PROTECT 0x332F0 CURRENTOFFSET-1

ORG 0x3332E
SHORT 0xE7E1 //b (0x080332F4)
PROTECT 0x3332E CURRENTOFFSET-1

ORG 0x3374C
jumpToHack(CheckIfLockedOrInSameGroup)

ORG 0x84830
SHORT 0x7810 //ldrb r0, [r2]
PROTECT 0x84830 CURRENTOFFSET-1

ORG 0x8483C //Repointing to ForcedDeploymentList when selecting units to deploy for the chapter
POIN ForcedDeploymentList
PROTECT 0x8483C CURRENTOFFSET-1

ORG 0x9541C
#include "asm/CheckIfUnitAtLockedPosition.lyn.event"
ALIGN 4
PROTECT 0x9541C CURRENTOFFSET-1

POP

#include "asm/CheckIfLockedPosition.lyn.event"
ALIGN 4

#include "asm/CheckIfLockedOrInSameGroup.lyn.event"
ALIGN 4


/*Misc notes because I deleted "notes or something.txt"

In vanilla FE8, 0x332F0 calls 0x9541C to determine how many forced units there are in the chapter. Once done, the game skips that many units in the events' deployement list for displaying the blue squares (where player units can start).

Instances of calling 0x3374C
0x1D538

Instances of calling 0x1D51C
0x33978 - before selecting the first unit to swap/first unit
0x33C90 - second unit

*/
